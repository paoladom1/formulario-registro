{"version":3,"sources":["serviceWorker.js","components/forms/RegisterForm.js","components/table/ScheduleTable.js","pages/Home.js","index.js","components/forms/RegisterForm.module.scss"],"names":["Boolean","window","location","hostname","match","RegisterForm","props","className","styles","container","name","type","placeholder","onChange","handleChange","value","data","carnet","schedule","disabled","isLate","handleToggle","htmlFor","onClick","handleSubmit","ScheduleTable","style","marginTop","registers","map","register","i","key","entryTime","toUTCString","handleRegisterDelete","id","Home","e","setState","target","state","filter","Number","console","log","preventDefault","length","concat","Date","lastId","this","React","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.80118c7d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport styles from \"./RegisterForm.module.scss\";\nimport ControlledSwitch from \"react-bulma-switch\";\n\nconst RegisterForm = props => {\n  return (\n    <form>\n      <div\n        className={`columns is-centered is-vcentered is-half ${styles.container}`}\n      >\n        <div className=\"column\">\n          <h1 className=\"title is-2\">Registro de laboratorio</h1>\n          <div className=\"field\">\n            <label className=\"label\">Ingrese el carnet:</label>\n            <input\n              name=\"carnet\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"carnet\"\n              onChange={props.handleChange}\n              value={props.data.carnet}\n            />\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Seleccione el horario:</label>\n            <div className=\"control is-expanded\">\n              <div className=\"select is-fullwidth\">\n                <select\n                  name=\"schedule\"\n                  value={props.data.schedule}\n                  onChange={props.handleChange}\n                >\n                  <option disabled value=\"\">Seleccione el horario</option>\n                  <option value=\"Lunes de 9:00 a 11.00\">\n                    Lunes de 9:00 a 11.00\n                  </option>\n                  <option value=\"Martes de 13:30 a 15:30\">\n                    Martes de 13:30 a 15:30\n                  </option>\n                  <option value=\"MiÃ©rcoles de 9:00 a 11.00\">\n                    MiÃ©rcoles de 9:00 a 11.00\n                  </option>\n                  <option value=\"Jueves de 13:30 a 15:30\">\n                    Jueves de 13:30 a 15:30\n                  </option>\n                  <option value=\"Viernes de 9:00 a 11.00\">\n                    Viernes de 9:00 a 11.00\n                  </option>\n                  <option value=\"Viernes de 15:30 a 17:30\">\n                    Viernes de 15:30 a 17:30\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <ControlledSwitch\n              name=\"isLate\"\n              value={props.data.isLate}\n              onChange={props.handleToggle}\n            >\n              Tarde?\n            </ControlledSwitch>\n            <label htmlFor=\"switchRtlExample\" className=\"label\">\n              LlegÃ³ tarde?\n            </label>\n          </div>\n\n          <div className=\"field\">\n            <div className=\"control\">\n              <button\n                className=\"button is-primary\"\n                onClick={props.handleSubmit}\n              >\n                Ingresar\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import React from \"react\";\n\nconst ScheduleTable = props => {\n  return (\n    <table\n      className=\"table is-striped is-fullwidth\"\n      style={{ marginTop: \"50px\" }}\n    >\n      <thead>\n        <tr>\n          <th>Carnet</th>\n          <th>Horario de Laboratorio</th>\n          <th>Hora de ingreso</th>\n          <th>Tarde?</th>\n          <th>Eliminar</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.registers.map((register, i) => {\n          return (\n            <tr key={i}>\n              <td>{register.carnet}</td>\n              <td>{register.schedule}</td>\n              <td>{register.entryTime.toUTCString()}</td>\n              <td>{register.isLate ? \"Tarde\" : \"A tiempo\"}</td>\n              <td>\n                <button\n                  className=\"button is-secondary\"\n                  onClick={props.handleRegisterDelete}\n                  name={register.id}\n                >\n                  Eliminar\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ScheduleTable;\n","import React from \"react\";\nimport RegisterForm from \"../components/forms/RegisterForm\";\nimport ScheduleTable from \"../components/table/ScheduleTable\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      carnet: \"\",\n      schedule: \"\",\n      registers: [],\n      isLate: false,\n      lastId: 0\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleToggle = e => {\n    this.setState({\n      [e.target.name]: !this.state.isLate\n    });\n  };\n\n  handleRegisterDelete = e => {\n    this.setState(\n      {\n        registers: this.state.registers.filter(register => {\n          return register.id !== Number(e.target.name);\n        })\n      },\n      () => console.log(this.state)\n    );\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.carnet.length !== 0 && this.state.schedule.length !== 0) {\n      this.setState({\n        registers: this.state.registers.concat({\n          carnet: this.state.carnet,\n          schedule: this.state.schedule,\n          entryTime: new Date(),\n          isLate: this.state.isLate,\n          id: this.state.lastId\n        }),\n        carnet: \"\",\n        schedule: \"\",\n        isLate: false,\n        lastId: this.state.lastId + 1\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <RegisterForm\n          data={this.state}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          handleToggle={this.handleToggle}\n        />\n        <ScheduleTable\n          registers={this.state.registers}\n          handleRegisterDelete={this.handleRegisterDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport Home from './pages/Home';\n\nimport './mystyles.scss';\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <Home />\n      </div>\n    );\n  }\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RegisterForm_container__1fTMF\",\"spinAround\":\"RegisterForm_spinAround__1IJ91\"};"],"sourceRoot":""}